const express = require("express");
const pool = require("./config");
const app = express();
const PORT = 5000;

// middleware
app.use(express.json());

// create a new user in the database
app.post("/user", async (req, res) => {
    try {
        const { name, email, phone } = req.body;

        // inserting data into the database
        // id is automatically generated by the database
        const user = await pool.query(
            "INSERT INTO users ( name, email, phone) VALUES ($1, $2, $3) RETURNING *",
            [name, email, phone],
        );

        res.status(200).json({
            message: "User created successfully.",
            user: user.rows[0],
        });
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
});

// get all users from the database
app.get("/users", async (req, res) => {
    try {
        // selecting all users data from the database
        const users = await pool.query("SELECT * FROM users");

        res.status(200).json({
            message: "All users retrieved successfully.",
            users: users.rows,
        });
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
});

// get a specific user by id from the database
app.get("/user/:id", async (req, res) => {
    try {
        const { id } = req.params;

        // selecting a specific user data by id from the database
        const user = await pool.query("SELECT * FROM users WHERE id=$1", [id]);

        res.status(200).json({
            message: "User retrieved successfully.",
            user: user.rows[0],
        });
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
});

// update a specific user by id in the database
app.put("/user/:id", async (req, res) => {
    try {
        const { id } = req.params;
        const { name, email, phone } = req.body;

        // updating a specific user data by id in the database
        const user = await pool.query(
            "UPDATE users SET name=$1, email=$2, phone=$3 WHERE id=$4 RETURNING *",
            [name, email, phone, id],
        );

        res.status(200).json({
            message: "User updated successfully.",
            user: user.rows[0],
        });
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
});

// delete a specific user by id in the database
app.delete("/user/:id", async (req, res) => {
    try {
        const { id } = req.params;

        // deleting a specific user data by id in the database
        await pool.query("DELETE FROM users WHERE id=$1", [id]);

        res.status(200).json({
            message: "User deleted successfully.",
        });
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
});

// default route
app.get("/", (req, res) => {
    res.send("Learning PostgreSQL!");
});

// start the server
app.listen(PORT, () => {
    console.log(`[server]: Server is running at http://localhost:${PORT}`);
});
